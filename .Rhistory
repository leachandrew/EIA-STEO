series<-c(series,paste("AEO.",c(2014,2017,2020),".LOWPRICE.PRCE_NOMP_TEN_NA_HHP_NA_USA_NDLRPMBTU.A",sep=""))
hh_data<-pdfetch_EIA(series,KEY)
names<-c(paste("AEO ",c(2014,2017,2020)," Reference Case",sep=""),paste("AEO ",c(2014,2017,2020)," Low Price Case",sep=""))
hh_data <- setNames(hh_data, names)
hh_data<-data.frame(date=index(hh_data), coredata(hh_data))
hh_data$date<-ymd(hh_data$date)
write_csv(hh_data,"aeo_hh_runs.csv")
hh_melt <- hh_data%>% pivot_longer(cols=-c("date"),names_to = "version")
hh_melt$version<-as.character(hh_melt$version)
hh_melt$version<-gsub("\\."," ",hh_melt$version)
hh_melt <- hh_melt%>%mutate(case = substr(version,10,100),
case=factor(case),
set=substr(version,1,8),
year=substr(version,5,8)
)
#hh Historic prices
#PET.RWTC.M
hh_hist<-pdfetch_EIA(c("NG.RNGWHHD.M"),KEY)
hh_hist<- setNames(hh_hist, "value")
hh_hist<-data.frame(date=index(hh_hist), coredata(hh_hist))
hh_hist <- hh_hist %>% mutate(date=ymd(date),
case = "Historic Data",
set=case,
case=factor(case),
version=case,
year=as.character(2020))%>%
filter(date>ymd("2005-01-01"))
hh_melt<-hh_melt %>% bind_rows(hh_hist)%>%
mutate(case=factor(case),case=fct_relevel(case,"Reference Case",after = 1))
ggplot(hh_melt)+
geom_line(data=filter(hh_melt,set!="Historic Data"),aes(date,value,colour=set,group=version,linetype=case),size=1.5)+
geom_line(data=filter(hh_melt,set=="Historic Data"),aes(date,value,group=version,linetype=case),size=1.5,colour="black")+
scale_y_continuous(breaks=pretty_breaks(),limits=c(0,max(hh_melt$value)))+
#scale_color_manual("",values = c(brewer.pal(3,"Blues")))+
#scale_color_manual("",values = (brewer.pal(3,"Greys")))+
#scale_color_manual("",values = colors_tableau10())+
scale_linetype_manual("",values=c(1,3,2))+
#scale_fill_manual("",values=colors_tableau10()[2])+
scale_x_date(breaks = "5 years",date_labels = "%b\n%Y",expand=c(0,0))+
weekly_small()+
theme(plot.subtitle = element_text(size = 10))+
guides(col = guide_legend(keywidth = unit(1.6,"cm"),nrow = 3),
linetype = guide_legend(keywidth = unit(1.6,"cm"),nrow = 3))+
labs(y="Henry Hub Spot Price ($/MMBtu)",x="",
title=paste("EIA Natural Gas Outlook"),
subtitle=paste("Historic values and EIA Annual Energy Outlook (AEO) forecasts"),
caption="Sources: EIA. Graph by Andrew Leach.")
#annual energy outlooks
#get 2014 (when they bought the project), 2017 (comparability to hearings analysis), and now
series<-paste("AEO.",c(2014,2017,2020,2021),".REF",c(2014,2017,2020,2021),".PRCE_NOMP_TEN_NA_WTI_NA_USA_NDLRPBRL.A",sep="")
series<-c(series,paste("AEO.",c(2014,2017,2020,2021),".LOWPRICE.PRCE_NOMP_TEN_NA_WTI_NA_USA_NDLRPBRL.A",sep=""))
series<-c(series,paste("AEO.",c(2014,2017,2020,2021),".HIGHPRICE.PRCE_NOMP_TEN_NA_WTI_NA_USA_NDLRPBRL.A",sep=""))
wti_data<-pdfetch_EIA(series,KEY)
names<-c(paste("AEO ",c(2014,2017,2020,2021)," Reference Case",sep=""),paste("AEO ",c(2014,2017,2020,2021)," Low Price Case",sep=""),paste("AEO ",c(2014,2017,2020,2021)," High Price Case",sep=""))
wti_data <- setNames(wti_data, names)
wti_data<-data.frame(date=index(wti_data), coredata(wti_data))
wti_data$date<-ymd(wti_data$date)
write_csv(wti_data,"aeo_runs.csv")
wti_melt <- wti_data %>% pivot_longer(cols=-c("date"),names_to = "version")
wti_melt$version<-as.character(wti_melt$version)
wti_melt$version<-gsub("\\."," ",wti_melt$version)
wti_melt <- wti_melt%>%mutate(case = substr(version,10,100),
case=gsub(" Case","",case),
case=factor(case),
set=substr(version,1,8),
year=substr(version,5,8)
)
#WTI Historic prices
#PET.RWTC.M
wti_hist<-pdfetch_EIA(c("PET.RWTC.D"),KEY)
wti_hist<- setNames(wti_hist, "value")
wti_hist<-data.frame(date=index(wti_hist), coredata(wti_hist))
wti_hist <- wti_hist %>% mutate(date=ymd(date),
case = "NYMEX Historic WTI Price Data",
set=case,
case=factor(case),
version=case,
year=as.character(2020))%>%
filter(date>ymd("2005-01-01"))
wti_melt<-wti_melt %>% bind_rows(wti_hist)%>%
mutate(case=factor(case),case=fct_relevel(case,"Reference",after = 1))
#wti_melt<-wti_melt %>% rename("Date"="date") %>% filter(year(Date)<2024)
wti_wide<-wti_melt %>%filter(case!="NYMEX Historic WTI Price Data")%>%pivot_wider(-c(case,version),names_from=case,values_from=value)%>%
rename(low=`Low Price`,high=`High Price`)%>% mutate(labels=paste("EIA Reference case and high and low price scenario range,","Annual Energy Oulook",year))
#%>%
#  left_join(wti_hist %>% select(date,wti_history=value))
#get CER 2020 prices
cer_2020<-read_csv("https://www.cer-rec.gc.ca/open/energy/energyfutures2020/benchmark-prices-2020.csv")%>%clean_names()%>%filter(variable=="West Texas Intermediate (WTI) - US$/bbl",year>=2020)%>%
mutate(date=ymd(paste(year,"-12-31")),
value=value*1.02^(year-2020))%>% select(date,value,scenario)%>%
pivot_wider(-scenario,values_from=value,names_from=scenario)%>%
select(date,cer_reference=Reference,cer_evolving=Evolving)%>%
mutate(labels="Reference and Evolving scenario range, CER Canada's Energy Future 2020")
cer_fx<-read_csv("https://www.cer-rec.gc.ca/open/energy/energyfutures2020/macro-indicators-2020.csv")%>%clean_names()%>%filter(region=="Canada",variable %in% c("Consumer Price Index (2002=100)","Canada-US Exchange Rate (C$/US$)"))%>%
mutate(date=ymd(paste(year,"-12-31")))
v_int<-c("West Texas Intermediate (WTI) - US$/bbl", "Western Canadian Select (WCS) - US$/bbl","Nova Inventory Transfer (NIT) - US$/MMBtu", "Canada-US Exchange Rate (C$/US$)","Consumer Price Index (2002=100)")
cer_data<-read_csv("https://www.cer-rec.gc.ca/open/energy/energyfutures2020/benchmark-prices-2020.csv")%>%clean_names()%>%
mutate(date=ymd(paste(year,"-12-31")))%>% bind_rows(cer_fx%>%select(-region))%>%select(-year)%>% filter(variable %in% v_int)%>%
pivot_wider(id=c(-scenario,-variable),values_from=value,names_from=c(variable,scenario))
#convert NIT to cad
cer_data$`Nova Inventory Transfer (NIT) - CA$/GJ_Evolving`<-cer_data$`Nova Inventory Transfer (NIT) - US$/MMBtu_Evolving`*cer_data$`Canada-US Exchange Rate (C$/US$)_Evolving`*0.94708628903179
cer_data$`Nova Inventory Transfer (NIT) - CA$/GJ_Reference`<-cer_data$`Nova Inventory Transfer (NIT) - US$/MMBtu_Reference`*cer_data$`Canada-US Exchange Rate (C$/US$)_Reference`*0.94708628903179
#Calculate differential
cer_data$`WCS_diff - CA$/bbl_Reference`<-(cer_data$`West Texas Intermediate (WTI) - US$/bbl_Reference`-cer_data$`Western Canadian Select (WCS) - US$/bbl_Reference`)*cer_data$`Canada-US Exchange Rate (C$/US$)_Reference`
cer_data$`WCS_diff - CA$/bbl_Evolving`<-(cer_data$`West Texas Intermediate (WTI) - US$/bbl_Evolving`-cer_data$`Western Canadian Select (WCS) - US$/bbl_Evolving`)*cer_data$`Canada-US Exchange Rate (C$/US$)_Evolving`
#invert fx
cer_data$`USD_CAD_Reference`=1/cer_data$`Canada-US Exchange Rate (C$/US$)_Reference`
cer_data$`USD_CAD_Evolving`=1/cer_data$`Canada-US Exchange Rate (C$/US$)_Evolving`
cer_data$year<-year(cer_data$date)
cer_data<-cer_data%>% select(c("year","West Texas Intermediate (WTI) - US$/bbl_Reference","West Texas Intermediate (WTI) - US$/bbl_Evolving",
"Nova Inventory Transfer (NIT) - CA$/GJ_Reference","Nova Inventory Transfer (NIT) - CA$/GJ_Evolving",
"WCS_diff - CA$/bbl_Reference", "WCS_diff - CA$/bbl_Evolving",
"USD_CAD_Reference","USD_CAD_Evolving","Consumer Price Index (2002=100)_Reference","Consumer Price Index (2002=100)_Evolving"))%>%filter(year>=2021)
write_csv(cer_data,"cer_to_os_model.csv")
graph_palette<-colors_tableau10()
graph_palette<-viridis_pal(option = "H")(5)
graph_palette<-viridis(7,option="A",direction = -1)[2:5]
ggplot(filter(wti_wide,year(date)%%1==0,year!=2020))+
geom_line(aes(date,Reference,group=set,color=labels),size=1.25)+
geom_ribbon(aes(date,ymin=low,ymax=high,group=set,color=labels,fill=labels),alpha=.2,linetype="blank",size=.25)+
geom_line(data=nymex_wti,aes(Date,value,group=version,linetype=version),size=1.25,color="black")+
geom_line(data=wti_hist,aes(date,value,group=version,linetype=version),size=1.25,color="black")+
geom_ribbon(data=cer_2020,aes(date,ymax=cer_reference,ymin=cer_evolving,fill=labels,color=labels),alpha=.2,linetype="blank",size=.25)+
#geom_errorbar(data=filter(cer_2020,year(date)%%1==0),aes(date,ymax=cer_reference,ymin=cer_evolving,fill=labels,color=labels),linetype="solid",width=200)+
#geom_point(data=nymex_test,aes(Date,value,group=version,color=version,fill=version,shape=version),size=2)+
scale_fill_manual("",values = graph_palette)+
scale_color_manual("",values = graph_palette)+
#scale_fill_grey("",start = 0,end = 0.5)+
#scale_color_grey("",start = 0,end = 0.5)+
#scale_fill_manual("",values = c(viridis_cols[c(1,1,2,2,3,3)],"black","black"))+
#scale_color_manual("",values = c(viridis_cols[c(1,1,2,2,3,3)],"black","black"))+
scale_linetype_manual("",values=c("solid","11"))+
#scale_shape_manual("",values=c(15,16,15,16,15,16,32,32))+
scale_y_continuous(breaks=pretty_breaks())+
expand_limits(y=0)+
scale_x_date(breaks = "5 years",date_labels = "%b\n%Y",expand=c(0,0))+
weekly_graphs()+
work_theme()+
theme(plot.caption = element_blank())+#no caption
theme(plot.subtitle = element_blank(),plot.title = element_blank(),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16))+
guides(col = guide_legend(override.aes = list(linetype = c(0,1,1,1)),keywidth = unit(2.1,"cm"),nrow = 4,reverse = T),
fill = guide_legend(keywidth = unit(2.1,"cm"),nrow = 4,reverse = T),
linetype = guide_legend(keywidth = unit(2.1,"cm"),nrow = 2)
#shape = guide_legend(keywidth = unit(2.4,"cm"),nrow = 2)
)+
labs(y="WTI Price ($/bbl)",x="",
title=paste("EIA and CER WTI Outlook"),
subtitle=paste("Historic and forward market settlement prices, CER Energy Futures 2020 and EIA Annual Energy Outlook (AEO) forecasts"),
caption="Data via CME Group, Canadian Energy Regulator (CER), and the US Energy Information Administration (EIA). Graph by Andrew Leach.")
ggsave("images/wti_ribbon_nymex.png",dpi=300,width = 16)
#code used to build the NYMEX Data
dates<-seq.Date(ymd("2020-12-20"),ymd("2020-12-23"),by="1 day")
data_store <- list()
date_count<-1
for(date_sent in seq.Date(ymd("2020-12-20"),ymd("2020-12-23"),by="1 day")){
date_sent<-as.Date(date_sent)
#  nymex.settle.20200501.s
file<-paste("nymex.settle.",year(date_sent),formatC(month(date_sent),width=2, flag="0"),
formatC(day(date_sent),width=2, flag="0"),".s.csv",sep = "")
print(file)
nymex_settle<-read_csv(file) %>% clean_names() %>%filter(sym=="CL")
data_store[[date_count]]<-nymex_settle
date_count<-date_count+1
}
nymex_rec<-data.frame(do.call(rbind,data_store))
write_csv(nymex_rec,"nymex_wti_rec.csv")
nymex_grp<-nymex_rec %>% mutate(year=as.numeric(substr(mmy,1,4)))%>% group_by(biz_dt,year) %>%
summarize(settle=mean(settle_price))
write_csv(nymex_rec,"nymex_wti_years.csv")
#wti_melt<- bind_rows(wti_melt,nymex_test)
#read from the web
nymex_file<-"ftp://ftp.cmegroup.com/pub/settle/nymex_future.csv"
nymex_file<-"nymex_futures_dec28.csv"
nymex<-read_csv(nymex_file)%>%clean_names()
#download.file("ftp://ftp.cmegroup.com/pub/settle/nymex_future.csv",destfile = "nymex_futures_dec28.csv")
nymex_wti<-read_csv(nymex_file)%>%clean_names()%>%
filter(product_description=="Crude Oil Last Day Financial Futures")%>%
mutate(Date=ymd(paste(contract_year,contract_month,15)),
version=paste("NYMEX WTI Futures",format(max(mdy(tradedate)),"%b %d, %Y")))%>%
rename("value"="settle")%>%
select(Date,value,version)
nymex_test<-nymex %>%
filter(product_description=="Crude Oil Last Day Financial Futures")%>%
mutate(Date=ymd(paste(contract_year,contract_month,15)),
version=paste("NYMEX WTI Futures",format(max(mdy(tradedate)),"%b %d, %Y")))%>%
rename("value"="settle")%>%
select(Date,value,version)%>%
filter(year(Date)<2023)
nymex_annual<-nymex %>%
filter(product_description=="Crude Oil Last Day Financial Futures")%>%
mutate(Date=ymd(paste(contract_year,contract_month,15)),
version=paste("NYMEX WTI Futures",format(max(mdy(tradedate)),"%b %d, %Y")))%>%
rename("value"="settle")%>%
select(Date,value,version)%>%
mutate(year=year(Date)) %>% group_by(year)%>% summarize(value=mean(value))
write_csv(nymex_annual,"nymex_wti_years.csv")
library(zoo)
library(lubridate)
library(readxl)
library(scales)
library(grid)
library(gridExtra)
library(janitor)
library(lemon)
library(ggpubr)
library(labeling)
library(timeDate)
library(cowplot)
library(patchwork)
library(timeDate)
library(broom)
library(ggthemes)
library(directlabels)
library(pdfetch)
library(gghighlight)
library(viridis)
library(tidyverse)
library(ggrepel)
source("graphs_base.R")
eia_fix_dates<-function(data_sent)
{
data_sent$date=ymd(rownames(data_sent))
rownames(data_sent)<-NULL
data_sent[]
}
steo_data_fetch<-function(date_sent){
#for any month and year, get the STEO Price outlook
#testing
#date_sent<-ymd("2015-01-01")
#month_sent should be lower case month.abb
#convert date to month/year notation used by eia
month_sent<-tolower(month.abb[month((date_sent))])
year_sent<-sprintf('%02d', year(date_sent)%% 100)
#before jun2013 they are xls files
file_date<-ymd(paste(year_sent,month_sent,1,sep="-"))
excel_file<-ifelse(file_date>ymd("2013-06-01"),
paste0("https://www.eia.gov/outlooks/steo/archives/",month_sent,year_sent,"_base.xlsx"),
paste0("https://www.eia.gov/outlooks/steo/archives/",month_sent,year_sent,"_base.xls"))
temp_file<-ifelse(file_date>ymd("2013-06-01"),
paste0("steo_",month_sent,"_",year_sent,".xlsx"),
paste0("steo_",month_sent,"_",year_sent,".xls"))
download.file(excel_file,mode = "wb",destfile = temp_file)
dates<-read_excel(path=temp_file,sheet = "2tab",range = "C3:C4",col_names = F)
names(dates)[1]<-"X__1"
year_start<-dates$X__1[1]
month_start<-grep(dates$X__1[2],month.abb)
#process price outlook
price_outlook<-read_excel(path=temp_file,sheet = "2tab",range = "A5:BV40",na="n/a")
names(price_outlook)<-c("code","Region",format(seq.Date(from=ymd(paste(year_start,month_start,1,sep="-")),by="1 month",length.out=72)))
#drop electricity and refined product headers
price_outlook<-price_outlook[-c(4,26),]
#rows which could be headers
headers<-grep("TRUE",is.na(price_outlook[,1]))
#for each header, the next x rows get a concatenated header
price_outlook$Header<-NA
price_outlook$Header[1]<-"Crude Oil"
for(j in headers){
#print(price_outlook$Region[j])
price_outlook$Header[[j]]<-price_outlook$Region[[j]]
}
price_outlook<-price_outlook %>% fill(Header)
price_outlook<-price_outlook[!is.na(price_outlook$code),]
price_outlook<-price_outlook %>% pivot_longer(cols=-c("code","Region","Header"),names_to = "Date",values_to = "value")
price_outlook$table<-"2tab"
price_outlook<-price_outlook %>% mutate(
Date=ymd(Date),
forecast=ifelse(Date>=file_date,1,0),
version=file_date)
#file ends up with columns code, Region, Header, Date, value, forecast, version
#process non_opec_supply
crude_supply_data<-read_excel(path=temp_file,sheet = "3atab",range = "A5:BV47",na="n/a")
names(crude_supply_data)<-c("code","Region",format(seq.Date(from=ymd(paste(year_start,month_start,1,sep="-")),by="1 month",length.out=72)))
crude_supply_data<-crude_supply_data[rowSums(is.na(crude_supply_data)) != ncol(crude_supply_data),]
headers<-grep("TRUE",is.na(crude_supply_data[,1]))
#for each header, the next x rows get a concatenated header
crude_supply_data$Header<-NA
crude_supply_data$Header[1]<-"Supply (million barrels per day) (a)"
for(j in headers){
#print(price_outlook$Region[j])
crude_supply_data$Header[[j]]<-crude_supply_data$Region[[j]]
}
crude_supply_data<-crude_supply_data %>% fill(Header)
crude_supply_data<-crude_supply_data[!is.na(crude_supply_data$code),]
crude_supply_data<-crude_supply_data %>% pivot_longer(cols=-c("code","Region","Header"),names_to = "Date",values_to ="value")
crude_supply_data$table<-"3atab"
crude_supply_data<-crude_supply_data %>% mutate(
Date=ymd(Date),
forecast=ifelse(Date>=file_date,1,0),
version=file_date)
#file ends up with columns code, Region, Header, Date, value, forecast, version
#process non_opec_supply
non_opec_supply_data<-read_excel(path=temp_file,sheet = "3btab",range = "A5:BV50",na="n/a")
names(non_opec_supply_data)<-c("code","Region",format(seq.Date(from=ymd(paste(year_start,month_start,1,sep="-")),by="1 month",length.out=72)))
non_opec_supply_data<-non_opec_supply_data[rowSums(is.na(non_opec_supply_data)) != ncol(non_opec_supply_data),]
non_opec_supply_data$Header<-"Petroleum Supply  (million barrels per day)"
non_opec_supply_data<-non_opec_supply_data %>% pivot_longer(cols=-c("code","Region","Header"),names_to = "Date",values_to ="value")
non_opec_supply_data$table<-"3btab"
non_opec_supply_data<-non_opec_supply_data %>% mutate(
Date=ymd(Date),
forecast=ifelse(Date>=file_date,1,0),
version=file_date)
#process opec_data
opec_supply_data<-read_excel(path=temp_file,sheet = "3ctab",range = "A4:BV55",na=c("n/a","-"))
names(opec_supply_data)<-c("code","Region",format(seq.Date(from=ymd(paste(year_start,month_start,1,sep="-")),by="1 month",length.out=72)))
opec_supply_data<-opec_supply_data[rowSums(is.na(opec_supply_data)) != ncol(opec_supply_data),]
opec_supply_data$Header<-NA
headers<-grep("TRUE",is.na(opec_supply_data[,1]))
#for each header, the next x rows get a concatenated header
for(j in headers){
#print(price_outlook$Region[j])
opec_supply_data$Header[[j]]<-opec_supply_data$Region[[j]]
}
opec_supply_data<-opec_supply_data %>% fill(Header)
opec_supply_data<-opec_supply_data[!is.na(opec_supply_data$code),]
opec_supply_data<-opec_supply_data %>% pivot_longer(cols=-c("code","Region","Header"),names_to = "Date",values_to ="value")
opec_supply_data$table<-"3ctab"
opec_supply_data<-opec_supply_data %>% mutate(
Date=ymd(Date),
forecast=ifelse(Date>=file_date,1,0),
version=file_date)
#stack everthing
steo_data<-rbind(price_outlook,crude_supply_data,non_opec_supply_data,opec_supply_data)
steo_data
}
#steo_data<-steo_data_fetch(ymd("2018-12-1"))
#get historic data
#steo_data<-steo_data_fetch(ymd("2018-12-1"))
#find current issue of STEO - latest it could be out is the 12th, but let's use the 15th
steo_date<-as_date(ifelse(day(Sys.Date())>=11,Sys.Date(),Sys.Date()-months(1)))
#steo_date<-Sys.Date()
steo_data0<-filter(steo_data_fetch(steo_date),Date>=ymd("2019-1-01"),forecast==0)
get_history<-0
if(get_history==1)
{
steo_data1<-filter(steo_data_fetch(ymd("2019-1-1")),Date>=ymd("2015-01-01"),forecast==0)
#2011-2014 histories
steo_data2<-filter(steo_data_fetch(ymd("2015-1-1")),forecast==0)
#2007-2010 histories
steo_data3<-filter(steo_data_fetch(ymd("2011-1-1")),forecast==0)
#2004-2007 histories
steo_data4<-filter(steo_data_fetch(ymd("2008-1-1")),Date<ymd("2007-01-01"),forecast==0)
steo_history<-rbind(steo_data4,steo_data3,steo_data2,steo_data1)
save(steo_history,file="steo_history.RData")
}
load("steo_history.RData")
steo_history<-rbind(steo_history,steo_data0)
#add forecasts
steo_forecast<-filter(steo_data_fetch(steo_date),forecast==1)
steo_data<-rbind(steo_history,steo_forecast)
#global supply and demand
#the brackets mess up filter, so this is a fix
supply_demand<-steo_data %>%filter(code %in% c("patc_world","papr_world"))%>%
mutate(Region=as_factor(Region),
Region=fct_collapse(Region,`Total World Supply` = c("Total World Supply", "Total World Production")))
#find forecast dates
min_forecast<-min(supply_demand$Date[supply_demand$forecast==1])
max_forecast<-max(supply_demand$Date[supply_demand$forecast==1])
#historical demand forecasts
steo_old_sd_forecasts<-filter(steo_data_fetch(ymd("2020-1-1")),Date>=ymd("2015-01-01"),forecast==1) %>%
#rbind(filter(steo_data_fetch(ymd("2020-2-1")),Date>=ymd("2015-01-01"),forecast==1))%>%
#rbind(filter(steo_data_fetch(ymd("2020-3-1")),Date>=ymd("2015-01-01"),forecast==1))%>%
rbind(filter(steo_data_fetch(ymd("2020-4-1")),Date>=ymd("2015-01-01"),forecast==1))%>%
#rbind(filter(steo_data_fetch(ymd("2020-5-1")),Date>=ymd("2015-01-01"),forecast==1))%>%
rbind(filter(steo_data_fetch(ymd("2020-6-1")),Date>=ymd("2015-01-01"),forecast==1))%>%
#rbind(filter(steo_data_fetch(ymd("2020-7-1")),Date>=ymd("2015-01-01"),forecast==1))%>%
#rbind(filter(steo_data_fetch(ymd("2020-8-1")),Date>=ymd("2015-01-01"),forecast==1))%>%
rbind(filter(steo_data_fetch(ymd("2020-9-1")),Date>=ymd("2015-01-01"),forecast==1))%>%
#rbind(filter(steo_data_fetch(ymd("2020-10-1")),Date>=ymd("2015-01-01"),forecast==1))%>%
#rbind(filter(steo_data_fetch(ymd("2020-11-1")),Date>=ymd("2015-01-01"),forecast==1))%>%
#rbind(filter(steo_data_fetch(ymd("2020-12-1")),Date>=ymd("2015-01-01"),forecast==1))%>%
rbind(filter(steo_data_fetch(ymd("2021-1-1")),Date>=ymd("2015-01-01"),forecast==1))%>%
#rbind(filter(steo_data_fetch(ymd("2021-2-1")),Date>=ymd("2015-01-01"),forecast==1))%>%
#rbind(filter(steo_data_fetch(ymd("2021-3-1")),Date>=ymd("2015-01-01"),forecast==1))%>%
filter(code %in% c("patc_world","papr_world"))%>%
mutate(Region=as_factor(Region),
Region=fct_collapse(Region,`Total World Supply` = c("Total World Supply", "Total World Production")),
version=factor(paste(month.abb[month(version)],year(version),"forecast"),
levels=paste(month.abb[month(unique(version))],year(unique(version)),"forecast")))
graph_df<-supply_demand%>%
mutate(Region=as_factor(Region),
Region=fct_collapse(Region,`Total World Supply` = c("Total World Supply", "Total World Production")),
version=factor(paste(format(max(supply_demand$version), "%b %Y"), "forecast"),
levels=paste(month.abb[month(unique(version))],year(unique(version)),"forecast")))%>%
bind_rows(steo_old_sd_forecasts)%>%
mutate(version=mdy(paste(substr(as.character(version),1,3),1,substr(as.character(version),4,8),sep=" ")),
version=factor(format(version,"%b %Y forecast"),
levels=format(sort(unique(version)),"%b %Y forecast")),
NULL
)
forecast_label<-paste(format(max(supply_demand$version), "%b %Y"), "forecast")
other_versions<-graph_df %>% filter(forecast==1,version!=forecast_label) %>% select(version) %>% unique()
max_date<-max(graph_df$Date)
demand<-ggplot(filter(graph_df,Region=="Total World Consumption",forecast==0))+
geom_line(aes(Date,value,group=version,linetype="Historic Data"),size=1.25)+
geom_line(data=filter(graph_df,Region=="Total World Consumption",forecast==1),
aes(Date,value,group=version,colour=version),lty="11",size=1.25)+
geom_point(data=filter(graph_df,Region=="Total World Consumption",forecast==1),
aes(Date,value,group=version,shape=version,colour=version,fill=version),size=2.5)+
#geom_line(data=filter(wti_fc,Date>ymd("2013-01-01"),forecast==0),aes(Date,value,linetype="A"),size=1.5,colour="black")+
#geom_line(data=budget_2020,aes(Date,WTI_CAD,colour="AB_Budget_2020",linetype="AB_Budget_2020"),size=1.5)+
#geom_point(data=budget_2020,aes(Date,WTI_CAD,colour="AB_Budget_2020"),shape=21,size=2,fill="white")+
scale_shape_manual("",values=c(15,16,17,18,0,1,2))+
scale_size_manual("",values=c(0,rep(2.5,6)))+
scale_y_continuous(breaks=pretty_breaks())+
#scale_linetype_manual("",values=c(1,1))+
scale_color_viridis("",discrete = T,option="A",direction = -1,end = .9)+
scale_fill_viridis("",discrete = T,option="A",direction = -1,end=.9)+
scale_linetype_manual("",values=c(1,2),labels=c("Historical Data","Forecast"))+
#scale_fill_manual("",values=colors_tableau10()[2])+
#ajl_line()+
theme_minimal()+weekly_graphs()+
guides(shape = guide_legend(keywidth = unit(1.6,"cm"),nrow = 2),
linetype = guide_legend(keywidth = unit(1.6,"cm"),nrow = 2),
colour = guide_legend(keywidth = unit(1.6,"cm"),override.aes = list(lty = "11")  ,nrow = 2),
fill = guide_legend(keywidth = unit(1.6,"cm"),nrow = 2))+
labs(y="Global Liquids Demand (million barrels per day)",x="",
title=paste("Global Liquids Demand and EIA Forecasts"),
subtitle=paste("Historic Values and Short Term Energy Outlook Forecasts"),
caption="Source: Data via EIA STEO, graph by Andrew Leach.")
demand+
scale_x_date(limits=c(ymd("2018-01-01"),max_date+months(3)),breaks = "12 months",date_labels = "%b\n%Y",expand = c(0,0))
ggsave("images/demand.png",width=16,height = 10,dpi=300)
ggsave("images/demand_small.png",width=16,height = 10,dpi=150)
demand+
scale_x_date(limits=c(ymd("2005-01-01"),max_date+months(3)),breaks = "12 months",date_labels = "%b\n%Y",expand = c(0,0))
ggsave("images/demand_long.png",width=16,height = 10,dpi=300)
supply<-ggplot(filter(graph_df,Region=="Total World Supply",forecast==0))+
geom_line(aes(Date,value,group=version,linetype="Historic Data"),size=1.5)+
geom_line(data=filter(graph_df,Region=="Total World Supply",forecast==1),
aes(Date,value,group=version,colour=version),lty="11",size=1.5)+
#geom_point(data=filter(graph_df,Region=="Total World Supply",forecast==1),
#           aes(Date,value,group=version,shape=version,colour=version,fill=version),size=2.5)+
#geom_line(data=filter(wti_fc,Date>ymd("2013-01-01"),forecast==0),aes(Date,value,linetype="A"),size=1.5,colour="black")+
#geom_line(data=budget_2020,aes(Date,WTI_CAD,colour="AB_Budget_2020",linetype="AB_Budget_2020"),size=1.5)+
#geom_point(data=budget_2020,aes(Date,WTI_CAD,colour="AB_Budget_2020"),shape=21,size=2,fill="white")+
#scale_x_date(breaks = "12 months",date_labels = "%b\n%Y",expand = c(0,0))+
#expand_limits(x=max(graph_df$Date+months(3)))+
scale_shape_manual("",values=c(15,16,17,18,0,1,2))+
scale_size_manual("",values=c(0,rep(2.5,6)))+
scale_y_continuous(breaks=pretty_breaks())+
expand_limits(y=c(80,110))+
#scale_linetype_manual("",values=c(1,1))+
scale_color_viridis("",discrete = T,option="A",direction = -1,end = .9)+
scale_fill_viridis("",discrete = T,option="A",direction = -1,end=.9)+
scale_linetype_manual("",values=c("solid","11"),labels=c("Historical Data","Forecast"))+
#scale_fill_manual("",values=colors_tableau10()[2])+
#ajl_line()+
theme_minimal()+weekly_graphs()+
guides(shape = guide_legend(keywidth = unit(1.6,"cm"),nrow = 2),
linetype = guide_legend(keywidth = unit(1.6,"cm"),nrow = 2),
colour = guide_legend(keywidth = unit(1.6,"cm"),override.aes = list(lty = "11")  ,nrow = 2),
fill = guide_legend(keywidth = unit(1.6,"cm"),nrow = 2))+
labs(y="Global Crude Oil Supply (million barrels per day)",x="",
title=paste("Global Liquids Supply and EIA Forecasts"),
subtitle=paste("Historic Values and Short Term Energy Outlook Forecasts"),
caption="Source: Data via EIA STEO, graph by Andrew Leach.")
supply+
scale_x_date(limits=c(ymd("2018-01-01"),max_date+months(3)),breaks = "12 months",date_labels = "%b\n%Y",expand = c(0,0))
ggsave("images/supply.png",width=16,height = 10,dpi=300)
ggsave("images/supply_small.png",width=16,height = 10,dpi=150)
supply+
scale_x_date(limits=c(ymd("2005-01-01"),max_date+months(3)),breaks = "12 months",date_labels = "%b\n%Y",expand = c(0,0))
ggsave("images/supply_long.png",width=16,height = 10,dpi=300)
graph_df<-supply_demand%>%
mutate(Region=as_factor(Region),
Region=fct_collapse(Region,`Total World Supply` = c("Total World Supply", "Total World Production")),
version=factor(paste(format(max(supply_demand$version), "%b %Y"), "forecast"),
levels=paste(month.abb[month(unique(version))],year(unique(version)),"forecast")))%>%
bind_rows(steo_old_sd_forecasts)%>%
mutate(version=mdy(paste(substr(as.character(version),1,3),1,substr(as.character(version),4,8),sep=" ")),
version=factor(format(version,"%b %Y forecast"),
levels=format(sort(unique(version)),"%b %Y forecast")),
NULL
)
forecast_label<-paste(format(max(supply_demand$version), "%b %Y"), "forecast")
other_versions<-graph_df %>% filter(forecast==1,version!=forecast_label) %>% select(version) %>% unique()
max_date<-max(graph_df$Date)
demand<-ggplot(filter(graph_df,Region=="Total World Consumption",forecast==0))+
geom_line(aes(Date,value,group=version,linetype="Historic Data"),size=1.25)+
geom_line(data=filter(graph_df,Region=="Total World Consumption",forecast==1),
aes(Date,value,group=version,colour=version),lty="11",size=1.25)+
geom_point(data=filter(graph_df,Region=="Total World Consumption",forecast==1),
aes(Date,value,group=version,shape=version,colour=version,fill=version),size=2.5)+
#geom_line(data=filter(wti_fc,Date>ymd("2013-01-01"),forecast==0),aes(Date,value,linetype="A"),size=1.5,colour="black")+
#geom_line(data=budget_2020,aes(Date,WTI_CAD,colour="AB_Budget_2020",linetype="AB_Budget_2020"),size=1.5)+
#geom_point(data=budget_2020,aes(Date,WTI_CAD,colour="AB_Budget_2020"),shape=21,size=2,fill="white")+
scale_shape_manual("",values=c(15,16,17,18,0,1,2))+
scale_size_manual("",values=c(0,rep(2.5,6)))+
scale_y_continuous(breaks=pretty_breaks())+
#scale_linetype_manual("",values=c(1,1))+
scale_color_viridis("",discrete = T,option="A",direction = -1,end = .9)+
scale_fill_viridis("",discrete = T,option="A",direction = -1,end=.9)+
scale_linetype_manual("",values=c(1,2),labels=c("Historical Data","Forecast"))+
#scale_fill_manual("",values=colors_tableau10()[2])+
#ajl_line()+
theme_minimal()+weekly_graphs()+
guides(shape = guide_legend(keywidth = unit(1.6,"cm"),nrow = 2),
linetype = guide_legend(keywidth = unit(1.6,"cm"),nrow = 2),
colour = guide_legend(keywidth = unit(1.6,"cm"),override.aes = list(lty = "11")  ,nrow = 2),
fill = guide_legend(keywidth = unit(1.6,"cm"),nrow = 2))+
labs(y="Global Liquids Demand (million barrels per day)",x="",
title=paste("Global Liquids Demand and EIA Forecasts"),
subtitle=paste("Historic Values and Short Term Energy Outlook Forecasts"),
caption="Source: Data via EIA STEO, graph by Andrew Leach.")
demand+
scale_x_date(limits=c(ymd("2018-01-01"),max_date+months(3)),breaks = "12 months",date_labels = "%b\n%Y",expand = c(0,0))
ggsave("images/demand.png",width=16,height = 10,dpi=300)
ggsave("images/demand_small.png",width=16,height = 10,dpi=150)
ggsave("images/demand_small.png",width=16,height = 10)
ggsave("images/demand_small.jpg",width=16,height = 10)
