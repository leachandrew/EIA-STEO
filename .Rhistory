ggsave("images/wti_fcast_nymex_AB_short.png",width=16,height = 9,dpi=res)
#END WTI PRICE
#aeo henry hub gas
#annual energy outlooks
#get 2014 (when they bought the project), 2017 (comparability to hearings analysis), and now
series<-paste("AEO.",c(2014,2017,2020),".REF",c(2014,2017,2020),".PRCE_NOMP_TEN_NA_HHP_NA_USA_NDLRPMBTU.A",sep="")
series<-c(series,paste("AEO.",c(2014,2017,2020),".LOWPRICE.PRCE_NOMP_TEN_NA_HHP_NA_USA_NDLRPMBTU.A",sep=""))
hh_data<-pdfetch_EIA(series,KEY)
names<-c(paste("AEO ",c(2014,2017,2020)," Reference Case",sep=""),paste("AEO ",c(2014,2017,2020)," Low Price Case",sep=""))
hh_data <- setNames(hh_data, names)
hh_data<-data.frame(date=index(hh_data), coredata(hh_data))
hh_data$date<-ymd(hh_data$date)
write_csv(hh_data,"aeo_hh_runs.csv")
hh_melt <- hh_data%>% pivot_longer(cols=-c("date"),names_to = "version")
hh_melt$version<-as.character(hh_melt$version)
hh_melt$version<-gsub("\\."," ",hh_melt$version)
hh_melt <- hh_melt%>%mutate(case = substr(version,10,100),
case=factor(case),
set=substr(version,1,8),
year=substr(version,5,8)
)
#hh Historic prices
#PET.RWTC.M
hh_hist<-pdfetch_EIA(c("NG.RNGWHHD.M"),KEY)
hh_hist<- setNames(hh_hist, "value")
hh_hist<-data.frame(date=index(hh_hist), coredata(hh_hist))
hh_hist <- hh_hist %>% mutate(date=ymd(date),
case = "Historic Data",
set=case,
case=factor(case),
version=case,
year=as.character(2020))%>%
filter(date>ymd("2005-01-01"))
hh_melt<-hh_melt %>% bind_rows(hh_hist)%>%
mutate(case=factor(case),case=fct_relevel(case,"Reference Case",after = 1))
ggplot(hh_melt)+
geom_line(data=filter(hh_melt,set!="Historic Data"),aes(date,value,colour=set,group=version,linetype=case),size=1.5)+
geom_line(data=filter(hh_melt,set=="Historic Data"),aes(date,value,group=version,linetype=case),size=1.5,colour="black")+
scale_y_continuous(breaks=pretty_breaks(),limits=c(0,max(hh_melt$value)))+
#scale_color_manual("",values = c(brewer.pal(3,"Blues")))+
#scale_color_manual("",values = (brewer.pal(3,"Greys")))+
#scale_color_manual("",values = colors_tableau10())+
scale_linetype_manual("",values=c(1,3,2))+
#scale_fill_manual("",values=colors_tableau10()[2])+
scale_x_date(breaks = "5 years",date_labels = "%b\n%Y",expand=c(0,0))+
weekly_small()+
theme(plot.subtitle = element_text(size = 10))+
guides(col = guide_legend(keywidth = unit(1.6,"cm"),nrow = 3),
linetype = guide_legend(keywidth = unit(1.6,"cm"),nrow = 3))+
labs(y="Henry Hub Spot Price ($/MMBtu)",x="",
title=paste("EIA Natural Gas Outlook"),
subtitle=paste("Historic values and EIA Annual Energy Outlook (AEO) forecasts"),
caption="Sources: EIA. Graph by Andrew Leach.")
#annual energy outlooks
#get 2014 (when they bought the project), 2017 (comparability to hearings analysis), and now
series<-paste("AEO.",c(2014,2017,2020,2021),".REF",c(2014,2017,2020,2021),".PRCE_NOMP_TEN_NA_WTI_NA_USA_NDLRPBRL.A",sep="")
series<-c(series,paste("AEO.",c(2014,2017,2020,2021),".LOWPRICE.PRCE_NOMP_TEN_NA_WTI_NA_USA_NDLRPBRL.A",sep=""))
series<-c(series,paste("AEO.",c(2014,2017,2020,2021),".HIGHPRICE.PRCE_NOMP_TEN_NA_WTI_NA_USA_NDLRPBRL.A",sep=""))
wti_data<-pdfetch_EIA(series,KEY)
names<-c(paste("AEO ",c(2014,2017,2020,2021)," Reference Case",sep=""),paste("AEO ",c(2014,2017,2020,2021)," Low Price Case",sep=""),paste("AEO ",c(2014,2017,2020,2021)," High Price Case",sep=""))
wti_data <- setNames(wti_data, names)
wti_data<-data.frame(date=index(wti_data), coredata(wti_data))
wti_data$date<-ymd(wti_data$date)
write_csv(wti_data,"aeo_runs.csv")
wti_melt <- wti_data %>% pivot_longer(cols=-c("date"),names_to = "version")
wti_melt$version<-as.character(wti_melt$version)
wti_melt$version<-gsub("\\."," ",wti_melt$version)
wti_melt <- wti_melt%>%mutate(case = substr(version,10,100),
case=gsub(" Case","",case),
case=factor(case),
set=substr(version,1,8),
year=substr(version,5,8)
)
#WTI Historic prices
#PET.RWTC.M
wti_hist<-pdfetch_EIA(c("PET.RWTC.D"),KEY)
wti_hist<- setNames(wti_hist, "value")
wti_hist<-data.frame(date=index(wti_hist), coredata(wti_hist))
wti_hist <- wti_hist %>% mutate(date=ymd(date),
case = "NYMEX Historic WTI Price Data",
set=case,
case=factor(case),
version=case,
year=as.character(2020))%>%
filter(date>ymd("2005-01-01"))
wti_melt<-wti_melt %>% bind_rows(wti_hist)%>%
mutate(case=factor(case),case=fct_relevel(case,"Reference",after = 1))
#wti_melt<-wti_melt %>% rename("Date"="date") %>% filter(year(Date)<2024)
wti_wide<-wti_melt %>%filter(case!="NYMEX Historic WTI Price Data")%>%pivot_wider(-c(case,version),names_from=case,values_from=value)%>%
rename(low=`Low Price`,high=`High Price`)%>% mutate(labels=paste("EIA Reference case and high and low price scenario range,","Annual Energy Oulook",year))
#%>%
#  left_join(wti_hist %>% select(date,wti_history=value))
#get CER 2020 prices
cer_2020<-read_csv("https://www.cer-rec.gc.ca/open/energy/energyfutures2020/benchmark-prices-2020.csv")%>%clean_names()%>%filter(variable=="West Texas Intermediate (WTI) - US$/bbl",year>=2020)%>%
mutate(date=ymd(paste(year,"-12-31")),
value=value*1.02^(year-2020))%>% select(date,value,scenario)%>%
pivot_wider(-scenario,values_from=value,names_from=scenario)%>%
select(date,cer_reference=Reference,cer_evolving=Evolving)%>%
mutate(labels="Reference and Evolving scenario range, CER Canada's Energy Future 2020")
cer_fx<-read_csv("https://www.cer-rec.gc.ca/open/energy/energyfutures2020/macro-indicators-2020.csv")%>%clean_names()%>%filter(region=="Canada",variable %in% c("Consumer Price Index (2002=100)","Canada-US Exchange Rate (C$/US$)"))%>%
mutate(date=ymd(paste(year,"-12-31")))
v_int<-c("West Texas Intermediate (WTI) - US$/bbl", "Western Canadian Select (WCS) - US$/bbl","Nova Inventory Transfer (NIT) - US$/MMBtu", "Canada-US Exchange Rate (C$/US$)","Consumer Price Index (2002=100)")
cer_data<-read_csv("https://www.cer-rec.gc.ca/open/energy/energyfutures2020/benchmark-prices-2020.csv")%>%clean_names()%>%
mutate(date=ymd(paste(year,"-12-31")))%>% bind_rows(cer_fx%>%select(-region))%>%select(-year)%>% filter(variable %in% v_int)%>%
pivot_wider(id=c(-scenario,-variable),values_from=value,names_from=c(variable,scenario))
#convert NIT to cad
cer_data$`Nova Inventory Transfer (NIT) - CA$/GJ_Evolving`<-cer_data$`Nova Inventory Transfer (NIT) - US$/MMBtu_Evolving`*cer_data$`Canada-US Exchange Rate (C$/US$)_Evolving`*0.94708628903179
cer_data$`Nova Inventory Transfer (NIT) - CA$/GJ_Reference`<-cer_data$`Nova Inventory Transfer (NIT) - US$/MMBtu_Reference`*cer_data$`Canada-US Exchange Rate (C$/US$)_Reference`*0.94708628903179
#Calculate differential
cer_data$`WCS_diff - CA$/bbl_Reference`<-(cer_data$`West Texas Intermediate (WTI) - US$/bbl_Reference`-cer_data$`Western Canadian Select (WCS) - US$/bbl_Reference`)*cer_data$`Canada-US Exchange Rate (C$/US$)_Reference`
cer_data$`WCS_diff - CA$/bbl_Evolving`<-(cer_data$`West Texas Intermediate (WTI) - US$/bbl_Evolving`-cer_data$`Western Canadian Select (WCS) - US$/bbl_Evolving`)*cer_data$`Canada-US Exchange Rate (C$/US$)_Evolving`
#invert fx
cer_data$`USD_CAD_Reference`=1/cer_data$`Canada-US Exchange Rate (C$/US$)_Reference`
cer_data$`USD_CAD_Evolving`=1/cer_data$`Canada-US Exchange Rate (C$/US$)_Evolving`
cer_data$year<-year(cer_data$date)
cer_data<-cer_data%>% select(c("year","West Texas Intermediate (WTI) - US$/bbl_Reference","West Texas Intermediate (WTI) - US$/bbl_Evolving",
"Nova Inventory Transfer (NIT) - CA$/GJ_Reference","Nova Inventory Transfer (NIT) - CA$/GJ_Evolving",
"WCS_diff - CA$/bbl_Reference", "WCS_diff - CA$/bbl_Evolving",
"USD_CAD_Reference","USD_CAD_Evolving","Consumer Price Index (2002=100)_Reference","Consumer Price Index (2002=100)_Evolving"))%>%filter(year>=2021)
write_csv(cer_data,"cer_to_os_model.csv")
graph_palette<-colors_tableau10()
graph_palette<-viridis_pal(option = "H")(5)
graph_palette<-viridis(7,option="A",direction = -1)[2:5]
ggplot(filter(wti_wide,year(date)%%1==0,year!=2020))+
geom_line(aes(date,Reference,group=set,color=labels),size=1.25)+
geom_ribbon(aes(date,ymin=low,ymax=high,group=set,color=labels,fill=labels),alpha=.2,linetype="blank",size=.25)+
geom_line(data=nymex_wti,aes(Date,value,group=version,linetype=version),size=1.25,color="black")+
geom_line(data=wti_hist,aes(date,value,group=version,linetype=version),size=1.25,color="black")+
geom_ribbon(data=cer_2020,aes(date,ymax=cer_reference,ymin=cer_evolving,fill=labels,color=labels),alpha=.2,linetype="blank",size=.25)+
#geom_errorbar(data=filter(cer_2020,year(date)%%1==0),aes(date,ymax=cer_reference,ymin=cer_evolving,fill=labels,color=labels),linetype="solid",width=200)+
#geom_point(data=nymex_test,aes(Date,value,group=version,color=version,fill=version,shape=version),size=2)+
scale_fill_manual("",values = graph_palette)+
scale_color_manual("",values = graph_palette)+
#scale_fill_grey("",start = 0,end = 0.5)+
#scale_color_grey("",start = 0,end = 0.5)+
#scale_fill_manual("",values = c(viridis_cols[c(1,1,2,2,3,3)],"black","black"))+
#scale_color_manual("",values = c(viridis_cols[c(1,1,2,2,3,3)],"black","black"))+
scale_linetype_manual("",values=c("solid","11"))+
#scale_shape_manual("",values=c(15,16,15,16,15,16,32,32))+
scale_y_continuous(breaks=pretty_breaks())+
expand_limits(y=0)+
scale_x_date(breaks = "5 years",date_labels = "%b\n%Y",expand=c(0,0))+
weekly_graphs()+
work_theme()+
theme(plot.caption = element_blank())+#no caption
theme(plot.subtitle = element_blank(),plot.title = element_blank(),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16))+
guides(col = guide_legend(override.aes = list(linetype = c(0,1,1,1)),keywidth = unit(2.1,"cm"),nrow = 4,reverse = T),
fill = guide_legend(keywidth = unit(2.1,"cm"),nrow = 4,reverse = T),
linetype = guide_legend(keywidth = unit(2.1,"cm"),nrow = 2)
#shape = guide_legend(keywidth = unit(2.4,"cm"),nrow = 2)
)+
labs(y="WTI Price ($/bbl)",x="",
title=paste("EIA and CER WTI Outlook"),
subtitle=paste("Historic and forward market settlement prices, CER Energy Futures 2020 and EIA Annual Energy Outlook (AEO) forecasts"),
caption="Data via CME Group, Canadian Energy Regulator (CER), and the US Energy Information Administration (EIA). Graph by Andrew Leach.")
ggsave("images/wti_ribbon_nymex.png",dpi=res,width = 16)
#code used to build the NYMEX Data
dates<-seq.Date(ymd("2020-12-20"),ymd("2020-12-23"),by="1 day")
data_store <- list()
date_count<-1
for(date_sent in seq.Date(ymd("2020-12-20"),ymd("2020-12-23"),by="1 day")){
date_sent<-as.Date(date_sent)
#  nymex.settle.20200501.s
file<-paste("nymex.settle.",year(date_sent),formatC(month(date_sent),width=2, flag="0"),
formatC(day(date_sent),width=2, flag="0"),".s.csv",sep = "")
print(file)
nymex_settle<-read_csv(file) %>% clean_names() %>%filter(sym=="CL")
data_store[[date_count]]<-nymex_settle
date_count<-date_count+1
}
nymex_rec<-data.frame(do.call(rbind,data_store))
write_csv(nymex_rec,"nymex_wti_rec.csv")
nymex_grp<-nymex_rec %>% mutate(year=as.numeric(substr(mmy,1,4)))%>% group_by(biz_dt,year) %>%
summarize(settle=mean(settle_price))
write_csv(nymex_rec,"nymex_wti_years.csv")
#wti_melt<- bind_rows(wti_melt,nymex_test)
#read from the web
nymex_file<-"ftp://ftp.cmegroup.com/pub/settle/nymex_future.csv"
nymex_file<-"nymex_futures_dec28.csv"
nymex<-read_csv(nymex_file)%>%clean_names()
#download.file("ftp://ftp.cmegroup.com/pub/settle/nymex_future.csv",destfile = "nymex_futures_dec28.csv")
nymex_wti<-read_csv(nymex_file)%>%clean_names()%>%
filter(product_description=="Crude Oil Last Day Financial Futures")%>%
mutate(Date=ymd(paste(contract_year,contract_month,15)),
version=paste("NYMEX WTI Futures",format(max(mdy(tradedate)),"%b %d, %Y")))%>%
rename("value"="settle")%>%
select(Date,value,version)
nymex_test<-nymex %>%
filter(product_description=="Crude Oil Last Day Financial Futures")%>%
mutate(Date=ymd(paste(contract_year,contract_month,15)),
version=paste("NYMEX WTI Futures",format(max(mdy(tradedate)),"%b %d, %Y")))%>%
rename("value"="settle")%>%
select(Date,value,version)%>%
filter(year(Date)<2023)
nymex_annual<-nymex %>%
filter(product_description=="Crude Oil Last Day Financial Futures")%>%
mutate(Date=ymd(paste(contract_year,contract_month,15)),
version=paste("NYMEX WTI Futures",format(max(mdy(tradedate)),"%b %d, %Y")))%>%
rename("value"="settle")%>%
select(Date,value,version)%>%
mutate(year=year(Date)) %>% group_by(year)%>% summarize(value=mean(value))
write_csv(nymex_annual,"nymex_wti_years.csv")
cer_fx<-read_csv("https://www.cer-rec.gc.ca/open/energy/energyfutures2021/macro-indicators-2021.csv")%>%clean_names()%>%filter(region=="Canada",variable %in% c("Consumer Price Index (2002=100)","Canada-US Exchange Rate (C$/US$)"))%>%
mutate(date=ymd(paste(year,"-12-31")))
v_int<-c("West Texas Intermediate (WTI) - US$/bbl", "Western Canadian Select (WCS) - US$/bbl","Nova Inventory Transfer (NIT) - US$/MMBtu", "Canada-US Exchange Rate (C$/US$)","Consumer Price Index (2002=100)")
cer_data<-read_csv("https://www.cer-rec.gc.ca/open/energy/energyfutures2021/benchmark-prices-2021.csv")%>%clean_names()%>%
mutate(date=ymd(paste(year,"-12-31")))%>% bind_rows(cer_fx%>%select(-region))%>%select(-year)%>% filter(variable %in% v_int)%>%
pivot_wider(id=c(-scenario,-variable),values_from=value,names_from=c(variable,scenario))
#convert NIT to cad
cer_data$`Nova Inventory Transfer (NIT) - CA$/GJ_Evolving`<-cer_data$`Nova Inventory Transfer (NIT) - US$/MMBtu_Evolving`*cer_data$`Canada-US Exchange Rate (C$/US$)_Evolving`*0.94708628903179
cer_data$`Nova Inventory Transfer (NIT) - CA$/GJ_Reference`<-cer_data$`Nova Inventory Transfer (NIT) - US$/MMBtu_Reference`*cer_data$`Canada-US Exchange Rate (C$/US$)_Reference`*0.94708628903179
#Calculate differential
cer_data$`WCS_diff - CA$/bbl_Reference`<-(cer_data$`West Texas Intermediate (WTI) - US$/bbl_Reference`-cer_data$`Western Canadian Select (WCS) - US$/bbl_Reference`)*cer_data$`Canada-US Exchange Rate (C$/US$)_Reference`
cer_data$`WCS_diff - CA$/bbl_Evolving`<-(cer_data$`West Texas Intermediate (WTI) - US$/bbl_Evolving`-cer_data$`Western Canadian Select (WCS) - US$/bbl_Evolving`)*cer_data$`Canada-US Exchange Rate (C$/US$)_Evolving`
#invert fx
cer_data$`USD_CAD_Reference`=1/cer_data$`Canada-US Exchange Rate (C$/US$)_Reference`
cer_data$`USD_CAD_Evolving`=1/cer_data$`Canada-US Exchange Rate (C$/US$)_Evolving`
cer_data$year<-year(cer_data$date)
cer_data<-cer_data%>% select(c("year","West Texas Intermediate (WTI) - US$/bbl_Reference","West Texas Intermediate (WTI) - US$/bbl_Evolving",
"Nova Inventory Transfer (NIT) - CA$/GJ_Reference","Nova Inventory Transfer (NIT) - CA$/GJ_Evolving",
"WCS_diff - CA$/bbl_Reference", "WCS_diff - CA$/bbl_Evolving",
"USD_CAD_Reference","USD_CAD_Evolving","Consumer Price Index (2002=100)_Reference","Consumer Price Index (2002=100)_Evolving"))%>%filter(year>=2021)
graph_palette<-colors_tableau10()
graph_palette<-viridis_pal(option = "H")(5)
graph_palette<-viridis(7,option="A",direction = -1)[2:5]
ggplot(filter(wti_wide,year(date)%%1==0,year!=2020))+
geom_line(aes(date,Reference,group=set,color=labels),size=1.25)+
geom_ribbon(aes(date,ymin=low,ymax=high,group=set,color=labels,fill=labels),alpha=.2,linetype="blank",size=.25)+
geom_line(data=nymex_wti,aes(Date,value,group=version,linetype=version),size=1.25,color="black")+
geom_line(data=wti_hist,aes(date,value,group=version,linetype=version),size=1.25,color="black")+
geom_ribbon(data=cer_2020,aes(date,ymax=cer_reference,ymin=cer_evolving,fill=labels,color=labels),alpha=.2,linetype="blank",size=.25)+
#geom_errorbar(data=filter(cer_2020,year(date)%%1==0),aes(date,ymax=cer_reference,ymin=cer_evolving,fill=labels,color=labels),linetype="solid",width=200)+
#geom_point(data=nymex_test,aes(Date,value,group=version,color=version,fill=version,shape=version),size=2)+
scale_fill_manual("",values = graph_palette)+
scale_color_manual("",values = graph_palette)+
#scale_fill_grey("",start = 0,end = 0.5)+
#scale_color_grey("",start = 0,end = 0.5)+
#scale_fill_manual("",values = c(viridis_cols[c(1,1,2,2,3,3)],"black","black"))+
#scale_color_manual("",values = c(viridis_cols[c(1,1,2,2,3,3)],"black","black"))+
scale_linetype_manual("",values=c("solid","11"))+
#scale_shape_manual("",values=c(15,16,15,16,15,16,32,32))+
scale_y_continuous(breaks=pretty_breaks())+
expand_limits(y=0)+
scale_x_date(breaks = "5 years",date_labels = "%b\n%Y",expand=c(0,0))+
weekly_graphs()+
work_theme()+
theme(plot.caption = element_blank())+#no caption
theme(plot.subtitle = element_blank(),plot.title = element_blank(),
legend.text = element_text(size = 16),
legend.title = element_text(size = 16))+
guides(col = guide_legend(override.aes = list(linetype = c(0,1,1,1)),keywidth = unit(2.1,"cm"),nrow = 4,reverse = T),
fill = guide_legend(keywidth = unit(2.1,"cm"),nrow = 4,reverse = T),
linetype = guide_legend(keywidth = unit(2.1,"cm"),nrow = 2)
#shape = guide_legend(keywidth = unit(2.4,"cm"),nrow = 2)
)+
labs(y="WTI Price ($/bbl)",x="",
title=paste("EIA and CER WTI Outlook"),
subtitle=paste("Historic and forward market settlement prices, CER Energy Futures 2020 and EIA Annual Energy Outlook (AEO) forecasts"),
caption="Data via CME Group, Canadian Energy Regulator (CER), and the US Energy Information Administration (EIA). Graph by Andrew Leach.")
#code to run off current nyumex
nymex_wti<-read_csv("ftp://ftp.cmegroup.com/pub/settle/nymex_future.csv")%>%clean_names()%>%
filter(product_description=="Crude Oil Last Day Financial Futures")%>%
mutate(Date=ymd(paste(contract_year,contract_month,15)),
version=paste("NYMEX WTI Futures",format(max(mdy(tradedate)),"%b %d, %Y")),
forecast=3)%>%
rename("value"="settle")%>%
select(Date,value,version,forecast)%>%
mutate(version=factor(version))
nymex_version<-as.character(unique(nymex_wti$version))
wti_hist<-pdfetch_EIA(c("PET.RWTC.D"),KEY)
wti_hist<- setNames(wti_hist, "value")
wti_hist<-data.frame(date=index(wti_hist), coredata(wti_hist))
wti_hist <- wti_hist %>% mutate(date=ymd(date),
case = "NYMEX Historic WTI Price Data",
year=year(date),month=month(date))%>%
group_by(month,year)%>% summarize(value=mean(value,na.rm = T))%>%
mutate(date=ymd(paste(year,month,1,sep="-")))%>%
filter(date>ymd("2005-01-01"))
shape_set<-c(0,1,2,5,6,15,16,17,18,19)
linetypes = c(apply(expand.grid(c(2,4), c(1,2,4,8,"A")), 1, paste, collapse=""),
apply(expand.grid(c(2,4,8), c(2,4), c(5,"F"), 2), 1, paste, collapse=""),
"4284B4F4", "228F61A4")
wti_graph<-ggplot(filter(wti_fc,forecast==1))+
#geom_line(data=filter(wti_fcg,Date>ymd("2010-01-01"),Date<ymd("2030-1-1")),aes(Date,value,group=version,colour=version),linetype="solid",size=1.15)+
geom_line(data=wti_hist,aes(date,value,linetype="Monthly Average WTI Prices"),size=1.15)+
geom_line(data=nymex_wti,aes(Date,value,group=version,linetype=version),size=1.15)+
geom_line(aes(Date,value,group=version,colour=version),linetype="solid",size=1.15)+
geom_point(aes(Date,ifelse(month(Date) %in% c(6,12),value,NA),group=version,colour=version,shape=version),size=2.15)+
scale_x_date(breaks = "24 months",date_labels = "%Y",expand=c(0,0))+
scale_shape_manual("",values=c(shape_set,shape_set))+ #skipped 19
scale_y_continuous(breaks=pretty_breaks(),expand=c(.20,.20))+
# expand_limits(y=0)+
expand_limits(x=ymd("2022-01-01"))+
#scale_linetype_manual("",values=c(1,1))+
#scale_color_viridis("",discrete = T,option="C",direction = 1,end = .9)+
scale_color_manual("",values = c(colors_tableau10()[-8],colors_tableau10_light()[-8],"grey80"))+
#scale_color_manual("",values = c("grey80"))+
scale_linetype_manual("",values=c("solid",linetypes[1]))+
#scale_fill_manual("",values=colors_tableau10()[2])+
#ajl_line()+
weekly_graphs()+
work_theme()+
theme(plot.caption = element_blank())+#no caption
guides(shape = guide_legend(keywidth = unit(1.6,"cm"),ncol = 2),
linetype = guide_legend(keywidth = unit(1.6,"cm"),nrow = 4),
colour = guide_legend(keywidth = unit(1.6,"cm"),ncol = 2),
NA
)+
labs(y="WTI Spot Monthly Average ($/bbl)",x="",
#title=paste("WTI Monthly Average Spot Price History and Forecasts"),
#subtitle=paste("Historic Values, EIA STEO Forecasts through ",format(max(supply_demand$version), "%B %Y"),", and ",nymex_version," settlements.",sep=""),
caption="Source: Data via CME Group and EIA, graph by Andrew Leach.")
wti_graph
wti_hist<-pdfetch_EIA(c("PET.RWTC.D"),KEY)
wti_hist<-pdfetch_EIA(c("PET.RWTC.M"),KEY)
install.packages(c("blogdown", "brew", "broom", "cli", "clipr", "colorspace", "conquer", "crayon", "dplyr", "dtplyr", "evaluate", "foreach", "future", "generics", "ggdendro", "glue", "gower", "gt", "iterators", "jsonlite", "leaflet", "lme4", "magrittr", "nloptr", "pillar", "quantreg", "raster", "RcppArmadillo", "readr", "recipes", "rlang", "RSQLite", "svglite", "systemfonts", "terra", "testthat", "tidyr", "tidyselect", "tinytex", "XML", "yaml"))
pdfetch_EIA(c("ELEC.GEN.ALL-AK-99.A","ELEC.GEN.ALL-AK-99.Q"), KEY)
library(zoo)
library(lubridate)
library(readxl)
library(scales)
library(grid)
library(gridExtra)
library(janitor)
library(lemon)
library(ggpubr)
library(labeling)
library(timeDate)
library(cowplot)
library(patchwork)
library(timeDate)
library(broom)
library(ggthemes)
library(directlabels)
library(pdfetch)
library(gghighlight)
library(viridis)
library(tidyverse)
library(ggrepel)
source("graphs_base.R")
pdfetch_EIA(c("ELEC.GEN.ALL-AK-99.A","ELEC.GEN.ALL-AK-99.Q"), KEY)
pdfetch_EIA
pdfetch_EIA<-function(identifiers, api_key)
{
results <- list()
freqlist <- c()
for (i in 1:length(identifiers)) {
id <- identifiers[i]
url <- paste0("https://api.eia.gov/series/?series_id=",
id, "&api_key=", api_key)
req <- GET(url)
res <- fromJSON(content(req, as = "text", encoding = "utf-8"))
if (is.null(res$request)) {
warning(paste("Invalid series code", id))
next
}
freq <- res$series$f
dates <- res$series$data[[1]][, 1]
data <- as.numeric(res$series$data[[1]][, 2])
freqlist <- c(freqlist, freq)
if (freq == "A") {
dates <- as.Date(ISOdate(as.numeric(dates), 12, 31))
}
else if (freq == "Q") {
y <- as.numeric(substr(dates, 1, 4))
m <- 3 * as.numeric(substr(dates, 6, 6))
dates <- month_end(as.Date(ISOdate(y, m, 1)))
}
else if (freq == "M") {
y <- as.numeric(substr(dates, 1, 4))
m <- as.numeric(substr(dates, 5, 6))
dates <- month_end(as.Date(ISOdate(y, m, 1)))
}
else if (freq == "W" || freq == "D") {
dates <- as.Date(dates, "%Y%m%d")
}
else if (freq == "H") {
dates <- as.POSIXct(dates, format = "%Y%m%dT%HZ",
tz = "GMT")
}
else {
warning(paste("Unrecognized frequency", freq,
"for series", id))
next
}
x <- xts(rev(data), rev(dates))
colnames(x) <- id
results[[i]] <- x
}
if (length(results) == 0)
return(NULL)
if ("H" %in% freqlist && !all(freqlist == "H"))
stop("You cannot mix hourly and non-hourly data in the same call")
na.trim(do.call(merge.xts, results), is.na = "all")
}
pdfetch_EIA(c("ELEC.GEN.ALL-AK-99.A","ELEC.GEN.ALL-AK-99.Q"), KEY)
library(zoo)
library(lubridate)
library(readxl)
library(scales)
library(grid)
library(gridExtra)
library(janitor)
library(lemon)
library(ggpubr)
library(labeling)
library(timeDate)
library(cowplot)
library(patchwork)
library(timeDate)
library(broom)
library(ggthemes)
library(directlabels)
library(pdfetch)
library(gghighlight)
library(viridis)
library(tidyverse)
library(ggrepel)
pdfetch_EIA(c("ELEC.GEN.ALL-AK-99.A","ELEC.GEN.ALL-AK-99.Q"), KEY)
library(httr)
pdfetch_EIA(c("ELEC.GEN.ALL-AK-99.A","ELEC.GEN.ALL-AK-99.Q"), KEY)
library(httr)
library(jsonlite)
library(zoo)
library(lubridate)
library(readxl)
library(scales)
library(grid)
library(gridExtra)
library(janitor)
library(lemon)
library(ggpubr)
library(labeling)
library(timeDate)
library(cowplot)
library(patchwork)
library(timeDate)
library(broom)
library(ggthemes)
library(directlabels)
library(pdfetch)
library(gghighlight)
library(viridis)
library(tidyverse)
library(ggrepel)
source("graphs_base.R")
pdfetch_EIA<-function(identifiers, api_key)
{
results <- list()
freqlist <- c()
for (i in 1:length(identifiers)) {
id <- identifiers[i]
url <- paste0("https://api.eia.gov/series/?series_id=",
id, "&api_key=", api_key)
req <- GET(url)
res <- fromJSON(content(req, as = "text", encoding = "utf-8"))
if (is.null(res$request)) {
warning(paste("Invalid series code", id))
next
}
freq <- res$series$f
dates <- res$series$data[[1]][, 1]
data <- as.numeric(res$series$data[[1]][, 2])
freqlist <- c(freqlist, freq)
if (freq == "A") {
dates <- as.Date(ISOdate(as.numeric(dates), 12, 31))
}
else if (freq == "Q") {
y <- as.numeric(substr(dates, 1, 4))
m <- 3 * as.numeric(substr(dates, 6, 6))
dates <- month_end(as.Date(ISOdate(y, m, 1)))
}
else if (freq == "M") {
y <- as.numeric(substr(dates, 1, 4))
m <- as.numeric(substr(dates, 5, 6))
dates <- month_end(as.Date(ISOdate(y, m, 1)))
}
else if (freq == "W" || freq == "D") {
dates <- as.Date(dates, "%Y%m%d")
}
else if (freq == "H") {
dates <- as.POSIXct(dates, format = "%Y%m%dT%HZ",
tz = "GMT")
}
else {
warning(paste("Unrecognized frequency", freq,
"for series", id))
next
}
x <- xts(rev(data), rev(dates))
colnames(x) <- id
results[[i]] <- x
}
if (length(results) == 0)
return(NULL)
if ("H" %in% freqlist && !all(freqlist == "H"))
stop("You cannot mix hourly and non-hourly data in the same call")
na.trim(do.call(merge.xts, results), is.na = "all")
}
pdfetch_EIA(c("ELEC.GEN.ALL-AK-99.A","ELEC.GEN.ALL-AK-99.Q"), KEY)
library(httr)
library(jsonlite)
library(xts)
pdfetch_EIA(c("ELEC.GEN.ALL-AK-99.A","ELEC.GEN.ALL-AK-99.Q"), KEY)
library(lubridate)
pdfetch_EIA(c("ELEC.GEN.ALL-AK-99.A","ELEC.GEN.ALL-AK-99.Q"), KEY)
library(pdfetch)
month_end
install_github("leachandrew/pdfetch")
devtools::install_github("leachandrew/pdfetch")
